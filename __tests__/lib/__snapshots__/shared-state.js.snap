// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Call the setter of useState() to update the different part. 1`] = `true`;

exports[`Call the setter of useState() to update the different part. 2`] = `undefined`;

exports[`Call the setter of useState() to update the different part. 3`] = `
Object {
  "child": false,
}
`;

exports[`Call the setter of useState() to update the different part. 4`] = `
Object {
  "test": Object {
    "child": true,
  },
  "testX": Object {
    "child": false,
  },
}
`;

exports[`Call useState() to get the state and the setter. 1`] = `
Object {
  "test": true,
}
`;

exports[`Call useState() to get the state and the setter. 2`] = `
Object {
  "test": false,
}
`;

exports[`Call useState() twice to make sure it did not assign setter again. 1`] = `
Object {
  "test": true,
}
`;

exports[`Call useState() twice to make sure it did not assign setter again. 2`] = `
Object {
  "test": true,
}
`;

exports[`Call useState() with a initial state to get the state. 1`] = `
Object {
  "test": true,
}
`;

exports[`Call useState() with a path and a initial partial state to get the state. 1`] = `true`;

exports[`Call useState() with a path to get the state and the setter. 1`] = `true`;

exports[`Call useState() with a path to get the state and the setter. 2`] = `false`;

exports[`Setter assign a partial state and call setters with path. 1`] = `
Object {
  "test": true,
}
`;

exports[`Setter call setState() without path. 1`] = `
Object {
  "test": true,
}
`;

exports[`setState() is assign state and call setters. 1`] = `
Object {
  "test": true,
}
`;
